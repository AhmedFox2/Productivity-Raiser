import time
import json
import os
import psutil
import win32gui
import win32process
import subprocess
from threading import Thread

# ╪з┘Д╪к╪╖╪и┘К┘В╪з╪к ╪з┘Д┘Ж╪╕╪з┘Е┘К╪й ╪з┘Д┘Д┘К ┘Е╪з ┘Ж╪║┘Д┘В┘З╪з ╪н╪к┘Й ┘Д┘И ┘Е╪┤ ┘Б┘К ╪з┘Д┘В╪з╪ж┘Е╪й
system_whitelist = [
    "explorer.exe",
    "searchapp.exe",
    "startmenuexperiencehost.exe",
    "ctfmon.exe",
    "runtimebroker.exe",
    "shellexperiencehost.exe",
    "applicationframehost.exe",
    "python.exe",
    "photos.exe"
]

# ╪к╪н┘Е┘К┘Д ╪з┘Д╪к╪╖╪и┘К┘В╪з╪к ╪з┘Д┘Е╪│┘Е┘И╪н╪й ┘Е┘Ж ╪з┘Д┘Е╪│╪к╪о╪п┘Е
def load_allowed_apps():
    try:
        with open("allowed_apps.json", "r") as f:
            return [os.path.basename(p).lower() for p in json.load(f)]
    except:
        return []

# ┘Е╪╣╪▒┘Б╪й ╪з┘Д╪к╪╖╪и┘К┘В ╪з┘Д┘Ж╪┤╪╖
def get_active_process_name():
    try:
        hwnd = win32gui.GetForegroundWindow()
        _, pid = win32process.GetWindowThreadProcessId(hwnd)
        proc = psutil.Process(pid)
        return proc.name().lower(), pid
    except Exception:
        return None, None

# ┘Е╪▒╪з┘В╪и╪й ╪з┘Д╪к╪╖╪и┘К┘В ╪з┘Д┘Ж╪┤╪╖
def monitor_active_window():
    allowed_apps = load_allowed_apps()
    print("ЁЯЪА ╪и╪п╪г ╪з┘Д┘Е╪▒╪з┘В╪и╪й ╪з┘Д╪░┘Г┘К╪й ┘Д┘Д┘Ж┘И╪з┘Б╪░...")

    while True:
        name, pid = get_active_process_name()

        if name not in allowed_apps and name not in system_whitelist and pid != None:
            try:
                psutil.Process(pid).kill()
                print(name ,"╪║┘К╪▒ ┘Е╪│┘Е┘И╪н ╪и┘З")
                Thread(target=lambda: subprocess.run(["python","gui.py"]),daemon=True).start()
            except Exception as e:
                print(f"тЪая╕П ╪к╪╣╪░╪▒ ╪з┘Д╪е╪║┘Д╪з┘В: {e}")

        time.sleep(1)

if __name__ == "__main__":
    monitor_active_window()
